from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Updater, CommandHandler, CallbackContext, MessageHandler, Filters, CallbackQueryHandler
import sqlite3

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ===
TOKEN = '7851351005:AAED62F63BRh20of2RBXxFfBR82JV44wclQ'
CHANNELS = ['@Vsi_PROMO', '@uaclub_casinoman']
REWARD_PER_REF = 4
WITHDRAW_LIMIT = 100
admin_id = 7262164512

# === –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö ===
conn = sqlite3.connect('promo_duo.db', check_same_thread=False)
cursor = conn.cursor()
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    invited_by INTEGER,
    balance INTEGER DEFAULT 0
)
""")
conn.commit()

# === –ú–µ–Ω—é –∫–Ω–æ–ø–æ–∫ ===
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üë• –ó–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥—Ä—É–∑—ñ–≤")],
        [KeyboardButton("üí∞ –ë–∞–ª–∞–Ω—Å"), KeyboardButton("üì§ –í–∏–≤—ñ–¥")]
    ],
    resize_keyboard=True
)

# === –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏ ===
def check_subscriptions(user_id, context):
    for channel in CHANNELS:
        member = context.bot.get_chat_member(channel, user_id)
        if member.status not in ['member', 'administrator', 'creator']:
            return False
    return True

# === /start ===
def start(update: Update, context: CallbackContext):
    user = update.effective_user
    user_id = user.id
    args = context.args

    if not check_subscriptions(user_id, context):
        buttons = [[InlineKeyboardButton("–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª", url=ch)] for ch in CHANNELS]
        update.message.reply_text(
            "–ü—ñ–¥–ø–∏—à–∏—Å—å –Ω–∞ –≤—Å—ñ –∫–∞–Ω–∞–ª–∏, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –±–æ—Ç–æ–º:",
            reply_markup=InlineKeyboardMarkup(buttons)
        )
        return

    if args:
        inviter_id = int(args[0])
        if inviter_id != user_id:
            cursor.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
            if not cursor.fetchone():
                cursor.execute("INSERT INTO users (user_id, invited_by, balance) VALUES (?, ?, 0)", (user_id, inviter_id))
                cursor.execute("UPDATE users SET balance = balance + ? WHERE user_id = ?", (REWARD_PER_REF, inviter_id))
                conn.commit()
    else:
        cursor.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (user_id,))

    context.bot.send_message(
        chat_id=user_id,
        text=(
            f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}!"
            
            f"–ó–∞–ø—Ä–æ—à—É–π –¥—Ä—É–∑—ñ–≤ —Ç–∞ –æ—Ç—Ä–∏–º—É–π –ø–æ {REWARD_PER_REF} –≥—Ä–Ω –∑–∞ –∫–æ–∂–Ω–æ–≥–æ!"
            
            f"–¢–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è: https://t.me/PromoDuoBot?start={user_id}"
        ),
        reply_markup=main_menu
    )

# === –ë–∞–ª–∞–Ω—Å ===
def balance(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    cursor.execute("SELECT balance FROM users WHERE user_id = ?", (user_id,))
    row = cursor.fetchone()
    bal = row[0] if row else 0
    msg = f"–í–∞—à –±–∞–ª–∞–Ω—Å: {bal} –≥—Ä–Ω"
    
    if bal >= WITHDRAW_LIMIT:
        msg += "‚úÖ –í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–≤–µ—Å—Ç–∏ –∫–æ—à—Ç–∏. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üì§ –í–∏–≤—ñ–¥'"
    else:
        msg += f"üîí –í–∏–≤—ñ–¥ –¥–æ—Å—Ç—É–ø–Ω–∏–π –ø—Ä–∏ {WITHDRAW_LIMIT} –≥—Ä–Ω"
    update.message.reply_text(msg, reply_markup=main_menu)

# === –í–∏–≤—ñ–¥ ===
def withdraw(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    cursor.execute("SELECT balance FROM users WHERE user_id = ?", (user_id,))
    row = cursor.fetchone()
    bal = row[0] if row else 0
    if bal < WITHDRAW_LIMIT:
        update.message.reply_text("üîí –í–∏–≤–µ–¥–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–µ –ø—Ä–∏ 100 –≥—Ä–Ω", reply_markup=main_menu)
        return
    update.message.reply_text("üí≥ –í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏ –∞–±–æ –ø–ª–∞—Ç—ñ–∂–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –¥–ª—è –≤–∏–ø–ª–∞—Ç–∏", reply_markup=main_menu)

# === –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∞–º–∏ ===
def handle_message(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    text = update.message.text

    if text == "üë• –ó–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥—Ä—É–∑—ñ–≤":
        link = f"https://t.me/PromoDuoBot?start={user_id}"
        update.message.reply_text(f"–í–∞—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è:
{link}", reply_markup=main_menu)
        return
    elif text == "üí∞ –ë–∞–ª–∞–Ω—Å":
        balance(update, context)
        return
    elif text == "üì§ –í–∏–≤—ñ–¥":
        withdraw(update, context)
        return

    # –Ü–Ω–∞–∫—à–µ - –æ–±—Ä–æ–±–∫–∞ —Ä–µ–∫–≤—ñ–∑–∏—Ç—ñ–≤
    cursor.execute("SELECT balance FROM users WHERE user_id = ?", (user_id,))
    row = cursor.fetchone()
    if row and row[0] >= WITHDRAW_LIMIT:
        context.bot.send_message(
            admin_id,
            f"üîî –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–≤–µ–¥–µ–Ω–Ω—è"
            
            f"üë§ @{update.effective_user.username}"
            
            f"ID: {user_id}"
            
            f"üí∞ –°—É–º–∞: {row[0]} –≥—Ä–Ω"
            
            f"üì§ –†–µ–∫–≤—ñ–∑–∏—Ç–∏: {text}"
        )
        update.message.reply_text("‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–ø–ª–∞—Ç—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ –∞–¥–º—ñ–Ω—É. –û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è!", reply_markup=main_menu)

# === –û—Å–Ω–æ–≤–Ω–∏–π –∑–∞–ø—É—Å–∫ ===
def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("balance", balance))
    dp.add_handler(CommandHandler("withdraw", withdraw))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
